import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { 
  Star,
  Quote,
  ChevronLeft,
  ChevronRight,
  Play,
  Award,
  Users,
  TrendingUp
} from 'lucide-react';

const testimonials = [
  {
    id: 1,
    name: 'PGS.TS Nguy·ªÖn VƒÉn Minh',
    position: 'Ph√≥ Hi·ªáu tr∆∞·ªüng',
    organization: 'ƒê·∫°i h·ªçc B√°ch Khoa H√† N·ªôi',
    avatar: 'üë®‚Äçüè´',
    rating: 5,
    content: 'H·ªá th·ªëng blockchain ƒë√£ c√°ch m·∫°ng h√≥a c√°ch ch√∫ng t√¥i qu·∫£n l√Ω v√† c·∫•p ph√°t b·∫±ng c·∫•p. Vi·ªác x√°c th·ª±c gi·ªù ƒë√¢y ch·ªâ m·∫•t v√†i gi√¢y thay v√¨ v√†i tu·∫ßn nh∆∞ tr∆∞·ªõc.',
    highlight: 'Ti·∫øt ki·ªám 95% th·ªùi gian x·ª≠ l√Ω',
    category: 'education',
    video: true
  },
  {
    id: 2,
    name: 'Nguy·ªÖn Thu H∆∞∆°ng',
    position: 'Sinh vi√™n nƒÉm 4',
    organization: 'ƒê·∫°i h·ªçc Kinh t·∫ø Qu·ªëc d√¢n',
    avatar: 'üë©‚Äçüéì',
    rating: 5,
    content: 'T√¥i ho√†n to√†n y√™n t√¢m v·ªÅ t√≠nh b·∫£o m·∫≠t c·ªßa b·∫±ng c·∫•p. Khi n·ªôp h·ªì s∆° xin vi·ªác, nh√† tuy·ªÉn d·ª•ng c√≥ th·ªÉ x√°c th·ª±c ngay l·∫≠p t·ª©c m√† kh√¥ng c·∫ßn ch·ªù ƒë·ª£i.',
    highlight: 'X√°c th·ª±c t·ª©c th√¨ khi xin vi·ªác',
    category: 'student'
  },
  {
    id: 3,
    name: 'Tr·∫ßn ƒê·ª©c Anh',
    position: 'Gi√°m ƒë·ªëc Nh√¢n s·ª±',
    organization: 'FPT Software',
    avatar: 'üë®‚Äçüíº',
    rating: 5,
    content: 'Ch√∫ng t√¥i ƒë√£ gi·∫£m ƒë∆∞·ª£c 80% th·ªùi gian ki·ªÉm tra h·ªì s∆° ·ª©ng vi√™n. T√≠nh nƒÉng x√°c th·ª±c t·ª± ƒë·ªông gi√∫p ch√∫ng t√¥i tuy·ªÉn d·ª•ng nhanh ch√≥ng v√† ch√≠nh x√°c h∆°n.',
    highlight: 'Gi·∫£m 80% th·ªùi gian tuy·ªÉn d·ª•ng',
    category: 'recruiter'
  },
  {
    id: 4,
    name: 'TS. L√™ Th·ªã Lan',
    position: 'Tr∆∞·ªüng ph√≤ng ƒê√†o t·∫°o',
    organization: 'Tr∆∞·ªùng THPT Chu VƒÉn An',
    avatar: 'üë©‚Äçüè´',
    rating: 5,
    content: 'Vi·ªác s·ªë h√≥a h·ªì s∆° h·ªçc sinh gi√∫p ch√∫ng t√¥i qu·∫£n l√Ω hi·ªáu qu·∫£ h∆°n. Ph·ª• huynh v√† h·ªçc sinh ƒë·ªÅu h√†i l√≤ng v·ªõi t√≠nh minh b·∫°ch v√† b·∫£o m·∫≠t c·ªßa h·ªá th·ªëng.',
    highlight: 'TƒÉng 40% hi·ªáu qu·∫£ qu·∫£n l√Ω',
    category: 'education'
  },
  {
    id: 5,
    name: 'Ph·∫°m VƒÉn H∆∞ng',
    position: 'Chuy√™n vi√™n x√°c th·ª±c',
    organization: 'B·ªô Gi√°o d·ª•c & ƒê√†o t·∫°o',
    avatar: 'üë®‚Äçüíª',
    rating: 5,
    content: 'H·ªá th·ªëng ƒë√°p ·ª©ng ƒë·∫ßy ƒë·ªß c√°c ti√™u chu·∫©n qu·ªëc gia v·ªÅ b·∫£o m·∫≠t v√† x√°c th·ª±c. ƒê√¢y l√† b∆∞·ªõc ti·∫øn quan tr·ªçng trong s·ªë h√≥a ng√†nh gi√°o d·ª•c Vi·ªát Nam.',
    highlight: 'Tu√¢n th·ªß 100% ti√™u chu·∫©n qu·ªëc gia',
    category: 'government'
  },
  {
    id: 6,
    name: 'Ho√†ng Minh Tu·∫•n',
    position: 'H·ªçc sinh l·ªõp 12',
    organization: 'Tr∆∞·ªùng THPT Nguy·ªÖn T·∫•t Th√†nh',
    avatar: 'üë®‚Äçüéì',
    rating: 5,
    content: 'M√¨nh th√≠ch c√°ch h·ªá th·ªëng cho ph√©p chia s·∫ª th√†nh t√≠ch h·ªçc t·∫≠p v·ªõi b·∫°n b√® v√† gia ƒë√¨nh. Giao di·ªán th√¢n thi·ªán, d·ªÖ s·ª≠ d·ª•ng ngay c·∫£ v·ªõi h·ªçc sinh nh∆∞ m√¨nh.',
    highlight: 'Giao di·ªán th√¢n thi·ªán v·ªõi h·ªçc sinh',
    category: 'student'
  }
];

const stats = [
  {
    icon: Star,
    value: '4.9/5',
    label: 'ƒê√°nh gi√° trung b√¨nh',
    description: 'T·ª´ 10,000+ ng∆∞·ªùi d√πng'
  },
  {
    icon: Users,
    value: '98%',
    label: 'T·ª∑ l·ªá h√†i l√≤ng',
    description: 'Ng∆∞·ªùi d√πng s·∫Ω gi·ªõi thi·ªáu'
  },
  {
    icon: TrendingUp,
    value: '150%',
    label: 'TƒÉng tr∆∞·ªüng',
    description: 'Ng∆∞·ªùi d√πng m·ªõi h√†ng th√°ng'
  },
  {
    icon: Award,
    value: '50+',
    label: 'Gi·∫£i th∆∞·ªüng',
    description: 'C√¥ng ngh·ªá & gi√°o d·ª•c'
  }
];

const categories = [
  { id: 'all', name: 'T·∫•t c·∫£', count: testimonials.length },
  { id: 'education', name: 'Gi√°o d·ª•c', count: testimonials.filter(t => t.category === 'education').length },
  { id: 'student', name: 'Sinh vi√™n', count: testimonials.filter(t => t.category === 'student').length },
  { id: 'recruiter', name: 'Tuy·ªÉn d·ª•ng', count: testimonials.filter(t => t.category === 'recruiter').length },
  { id: 'government', name: 'Ch√≠nh ph·ªß', count: testimonials.filter(t => t.category === 'government').length }
];

export const Testimonials: React.FC = () => {
  const [activeCategory, setActiveCategory] = useState('all');
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isPlaying, setIsPlaying] = useState<{ [key: number]: boolean }>({});

  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1
  });

  const filteredTestimonials = activeCategory === 'all' 
    ? testimonials 
    : testimonials.filter(t => t.category === activeCategory);

  const nextTestimonial = () => {
    setCurrentIndex((prev) => (prev + 1) % filteredTestimonials.length);
  };

  const prevTestimonial = () => {
    setCurrentIndex((prev) => (prev - 1 + filteredTestimonials.length) % filteredTestimonials.length);
  };

  const toggleVideo = (id: number) => {
    setIsPlaying(prev => ({
      ...prev,
      [id]: !prev[id]
    }));
  };

  return (
    <section ref={ref} className="py-20 bg-white">
      <div className="container mx-auto px-6">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl font-bold text-gray-900 mb-4">
            Kh√°ch H√†ng N√≥i G√¨ V·ªÅ Ch√∫ng T√¥i
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            H√†ng ngh√¨n t·ªï ch·ª©c gi√°o d·ª•c, sinh vi√™n v√† nh√† tuy·ªÉn d·ª•ng ƒë√£ tin t∆∞·ªüng 
            v√† h√†i l√≤ng v·ªõi d·ªãch v·ª• c·ªßa ch√∫ng t√¥i
          </p>
        </motion.div>

        {/* Stats */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.2 }}
          className="grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16"
        >
          {stats.map((stat, index) => {
            const IconComponent = stat.icon;
            return (
              <motion.div
                key={index}
                initial={{ opacity: 0, scale: 0.9 }}
                animate={inView ? { opacity: 1, scale: 1 } : {}}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                className="text-center bg-gradient-to-br from-blue-50 to-purple-50 rounded-xl p-6"
              >
                <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4">
                  <IconComponent size={24} className="text-white" />
                </div>
                <div className="text-2xl font-bold text-gray-900 mb-1">
                  {stat.value}
                </div>
                <div className="text-lg font-semibold text-gray-700 mb-1">
                  {stat.label}
                </div>
                <div className="text-sm text-gray-500">
                  {stat.description}
                </div>
              </motion.div>
            );
          })}
        </motion.div>

        {/* Category Filter */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6, delay: 0.4 }}
          className="flex flex-wrap justify-center gap-4 mb-12"
        >
          {categories.map((category) => (
            <button
              key={category.id}
              onClick={() => {
                setActiveCategory(category.id);
                setCurrentIndex(0);
              }}
              className={`px-6 py-3 rounded-full font-medium transition-all duration-300 ${
                activeCategory === category.id
                  ? 'bg-blue-600 text-white shadow-lg'
                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
              }`}
            >
              {category.name} ({category.count})
            </button>
          ))}
        </motion.div>

        {/* Main Testimonial Carousel */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.6 }}
          className="max-w-4xl mx-auto mb-16"
        >
          <div className="relative bg-gradient-to-br from-gray-50 to-white rounded-2xl p-8 md:p-12 shadow-lg">
            {/* Quote Icon */}
            <div className="absolute top-6 left-6 text-blue-200">
              <Quote size={48} />
            </div>

            {/* Navigation Arrows */}
            <div className="absolute top-1/2 -translate-y-1/2 left-4">
              <button
                onClick={prevTestimonial}
                className="w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:shadow-lg transition-shadow duration-300"
              >
                <ChevronLeft size={20} className="text-gray-600" />
              </button>
            </div>
            <div className="absolute top-1/2 -translate-y-1/2 right-4">
              <button
                onClick={nextTestimonial}
                className="w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:shadow-lg transition-shadow duration-300"
              >
                <ChevronRight size={20} className="text-gray-600" />
              </button>
            </div>

            {/* Testimonial Content */}
            <div className="relative z-10">
              <div className="flex items-center mb-6">
                <div className="text-6xl mr-4">
                  {filteredTestimonials[currentIndex]?.avatar}
                </div>
                <div>
                  <h3 className="text-xl font-bold text-gray-900">
                    {filteredTestimonials[currentIndex]?.name}
                  </h3>
                  <p className="text-gray-600">
                    {filteredTestimonials[currentIndex]?.position}
                  </p>
                  <p className="text-blue-600 font-medium">
                    {filteredTestimonials[currentIndex]?.organization}
                  </p>
                </div>
                {filteredTestimonials[currentIndex]?.video && (
                  <div className="ml-auto">
                    <button
                      onClick={() => toggleVideo(filteredTestimonials[currentIndex].id)}
                      className="w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center text-white hover:bg-blue-700 transition-colors duration-300"
                    >
                      <Play size={20} />
                    </button>
                  </div>
                )}
              </div>

              {/* Rating */}
              <div className="flex items-center mb-4">
                {[...Array(filteredTestimonials[currentIndex]?.rating || 5)].map((_, i) => (
                  <Star key={i} size={20} className="text-yellow-400 fill-current" />
                ))}
              </div>

              {/* Content */}
              <blockquote className="text-lg text-gray-700 leading-relaxed mb-6 italic">
                "{filteredTestimonials[currentIndex]?.content}"
              </blockquote>

              {/* Highlight */}
              <div className="bg-blue-50 border-l-4 border-blue-500 p-4 rounded">
                <p className="text-blue-800 font-semibold">
                  ‚ú® {filteredTestimonials[currentIndex]?.highlight}
                </p>
              </div>
            </div>

            {/* Dots Indicator */}
            <div className="flex justify-center mt-8">
              {filteredTestimonials.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentIndex(index)}
                  className={`w-3 h-3 rounded-full mx-1 transition-all duration-300 ${
                    currentIndex === index
                      ? 'bg-blue-600 w-8'
                      : 'bg-gray-300 hover:bg-gray-400'
                  }`}
                />
              ))}
            </div>
          </div>
        </motion.div>

        {/* Testimonial Grid */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.8 }}
          className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16"
        >
          {filteredTestimonials.slice(0, 6).map((testimonial, index) => (
            <motion.div
              key={testimonial.id}
              initial={{ opacity: 0, y: 20 }}
              animate={inView ? { opacity: 1, y: 0 } : {}}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              whileHover={{ y: -5 }}
              className="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-lg transition-all duration-300"
            >
              <div className="flex items-center mb-4">
                <div className="text-3xl mr-3">{testimonial.avatar}</div>
                <div>
                  <h4 className="font-semibold text-gray-900">{testimonial.name}</h4>
                  <p className="text-sm text-gray-600">{testimonial.position}</p>
                </div>
              </div>
              
              <div className="flex items-center mb-3">
                {[...Array(testimonial.rating)].map((_, i) => (
                  <Star key={i} size={16} className="text-yellow-400 fill-current" />
                ))}
              </div>
              
              <p className="text-gray-700 text-sm leading-relaxed mb-3">
                "{testimonial.content.substring(0, 120)}..."
              </p>
              
              <div className="text-xs text-blue-600 font-medium">
                {testimonial.organization}
              </div>
            </motion.div>
          ))}
        </motion.div>

        {/* Bottom CTA */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6, delay: 1.0 }}
          className="text-center"
        >
          <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-8 text-white">
            <h3 className="text-2xl font-bold mb-4">
              Tham Gia C·ªông ƒê·ªìng H√†i L√≤ng
            </h3>
            <p className="text-lg mb-6 opacity-90">
              H∆°n 50,000 ng∆∞·ªùi d√πng ƒë√£ tin t∆∞·ªüng. B·∫°n s·∫Ω l√† ng∆∞·ªùi ti·∫øp theo?
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <button className="bg-white text-blue-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors duration-300">
                B·∫Øt ƒê·∫ßu Mi·ªÖn Ph√≠
              </button>
              <button className="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-blue-600 transition-all duration-300">
                Xem Th√™m ƒê√°nh Gi√°
              </button>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default Testimonials;
